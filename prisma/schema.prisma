// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  username    String
  email       String        @unique
  password    String
  isAdmin     Boolean       @default(false)
  phoneNumber String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  listingCars ListingCars[]

  chats   Chat[]
  Message Message[]
}

model Chat {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  messages  Message[]
}

model Message {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sender   User   @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId String
  chat     Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId   String
}

model ListingCars {
  id           String  @id @default(uuid())
  title        String
  offerDetails String
  price        String
  color        String
  year         String
  transmission String
  country      String
  city         String
  mileage      String
  featured     Boolean @default(false)
  cylinders    String
  shape        String
  carClass     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId String

  CarsMakers   CarsMakers? @relation(fields: [carsMakersId], references: [id], onDelete: Cascade)
  carsMakersId String?

  CarsModels   CarsModels? @relation(fields: [carsModelsId], references: [id], onDelete: Cascade)
  carsModelsId String?

  Damage Damage[]
  Images CarsImages[]
  Videos CarsVideos[]
}

model CarsImages {
  id        String   @id @default(uuid())
  Links     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ListingCars   ListingCars? @relation(fields: [listingCarsId], references: [id])
  listingCarsId String?
}

model CarsVideos {
  id        String   @id @default(uuid())
  Links     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ListingCars   ListingCars? @relation(fields: [listingCarsId], references: [id])
  listingCarsId String?
}

model CarsMakers {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listingCars ListingCars[]
  carsModel   CarsModels[]
}

model CarsModels {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  CarsMakers   CarsMakers? @relation(fields: [carsMakersId], references: [id], onDelete: Cascade)
  carsMakersId String?

  listingCars ListingCars[]
}

model Damage {
  id           String      @id @default(uuid())
  description  String
  listingCar   ListingCars @relation(fields: [listingCarId], references: [id], onDelete: Cascade)
  listingCarId String
}
